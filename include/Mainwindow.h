/**
 *  @file   Mainwindow.h
 *  @brief  Main Graphic Interface
 *  @author Afroditi Toufa
 *  @date   2020-07-09
 ***********************************************/


#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QWidget>
#include <QDialog>
#include "SimulationInput.h"
#include "execSimulation.h"
#include "SimulationAnalysis.h"
#include "RunSimulation.h"
#include <QProcess>
#include <QTimer>
#include <QCloseEvent>

namespace Ui {
class Mainwindow;
}

class Mainwindow : public QMainWindow
{
    Q_OBJECT

public:
    /**
     * @brief Mainwindow class constructor
     * @param QWidget parent
     */
    explicit Mainwindow(QWidget *parent = nullptr);
    ~Mainwindow();

    /**
     * @brief the name of the output file of dnaDesign.py script that is defined by the user
     */
    QString pdb_out;
    /**
     * @brief timer utility
     */
    QTimer *timer;
    /**
     * @brief progressbar incrementation
     */
    int incr=0;
    /**
     * @brief SimulationInput class pointer
     */
    SimulationInput *sim_input;
    /**
     * @brief output python file extension
     */
    QString ext = ".pdb";
    /**
     * @brief the input dat file for dnaDesign
     */
    QString dat;
    /**
     * @brief SimulationAnalysis class pointer
     */
    SimulationAnalysis *dnaAnalysis;



public slots:
    /**
     * @brief Runs the DNAdesign.py python script in a separate process that takes as an input, the .dat file
     *  provided by the user.
     */
    void run_dnaDesign();
    /**
     * @brief Reads the text output that is generated by the DNAdesign.py script
     */
    void Print(const QString&);
    /**
     * @brief Sets the timer the observes the execution time of the python process
     */
    void proc_started();
    /**
     * @brief Sets the completion of the dnaDesign python process, stops the timer and prints the process output.
     * @param exit code return by the process
     * @param set the process status whether it is completed successfully or returns an error code.
     */
    void itHasFinished(int exitCode, QProcess::ExitStatus exitStatus);
    /**
     * @brief Increment the progress bar as the python script is running
     */
    void increment_progressBar();
    /**
     * @brief Loads the dnaDesign.py script's pdb output file as an input and opens the simulation's parameters dialog.
     */
    void proceed();
    /**
     * @brief Open and edit dnaDesign.py script before running it
     */
    void open_script();
    /**
     * @brief stores the .dat user file in the dat public variable
     */
    void datFile(QString);
    /**
     * @brief Opens the Dna Analysis dialog with user file .dat file loaded
     */
    void DNA_analysis();



protected:
   void closeEvent(QCloseEvent *);


private slots:
   /**
     * @brief cancels all procedures and exits program
     */
    void on_PB_cancel_pressed();

    /**
     * @brief open and edit the .dat file before running the python script
     */
    void on_PB_editDatFile_pressed();

private:
    Ui::Mainwindow *ui;
};

#endif // MAINWINDOW_H
